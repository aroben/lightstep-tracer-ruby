#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'crouton_types'

module ReportingService
  class Client
    include ::Thrift::Client

    def Report(auth, request)
      send_Report(auth, request)
      return recv_Report()
    end

    def send_Report(auth, request)
      send_message('Report', Report_args, :auth => auth, :request => request)
    end

    def recv_Report()
      result = receive_message(Report_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'Report failed: unknown result')
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_Report(seqid, iprot, oprot)
      args = read_args(iprot, Report_args)
      result = Report_result.new()
      result.success = @handler.Report(args.auth, args.request)
      write_result(result, oprot, 'Report', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Report_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    AUTH = 1
    REQUEST = 2

    FIELDS = {
      AUTH => {:type => ::Thrift::Types::STRUCT, :name => 'auth', :class => ::Auth},
      REQUEST => {:type => ::Thrift::Types::STRUCT, :name => 'request', :class => ::ReportRequest}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Report_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => ::ReportResponse}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

